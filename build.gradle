plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.6.1'
	
	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	// JUnit 5
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	
	// H2 DB	
	runtimeOnly 'com.h2database:h2'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.2.220'

	// MariaDB JDBC driver
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.4'

	// Apache HttpClient
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'
	
	// spring-boot-starter-webflux for using "WebClient", instead of "RestTemplate"
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
	
	// To use MySQL when the property file "-prod" is being used
	runtimeOnly 'mysql:mysql-connector-java:8.0.26'
	
}

tasks.named('test') {
	useJUnitPlatform()
}

task release {
	// "build" task가 먼저 실행되어야 한다는 의미.
	dependsOn("build")
	
	doLast {
		def stdout = new ByteArrayOutputStream()
		exec {
			// 아래의 line은 console에서 eb setenv SPRING_PROFILES_ACTIVE=prod 를 실행하는 것과 같은 기능.
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}
		// 결과 log
		println "eb setenv PSINRG_PROFILES_ACTIVE=prod :\n$stdout";
		exec {
			// 아래의 line은 console에서의 eb deploy 와 동일.
			commandLine 'eb', 'deploy'
			standardOutput = stdout
		}
		// 결과 log
		println "eb deploy : \n$stdout";
		println "Release succeeded."
	}
}